<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="com.atguigu.ssm">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 数据源 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 事务 -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>
	
	<!-- 整合Mybatis -->
	
	<!-- 
		1. 解决SqlSession对象的创建及管理:
			MyBatis : SqlSessionFactory(mybatis-config.xml)==>SqlSession 
			SSM     : SqlSessionFactoryBean
	 -->
	
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--  Mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" ></property>
		<!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定SQL映射文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
		<!-- 别名处理 -->
		<property name="typeAliasesPackage" value="com.atguigu.ssm.beans"></property>
	</bean>
	 
	<!-- 
		2. 解决Mapper接口代理实现类对象的创建及管理
			Mybatis :  SqlSession.getMapper(xxxMapper.class);	
			SSM     :  MapperScannerConfigurer     EmployeeMapper ==> 代理对象==>IOC容器==>id: employeeMapper
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.atguigu.ssm.mapper"></property>
	</bean>
	
	<!-- <mybatis-spring:scan base-package="com.atguigu.ssm.mapper"/> -->
	
	
	
	
	
	
	
	
	
	
	
	
	

</beans>
